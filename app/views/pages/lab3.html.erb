<html>

<head>
  <title>Main | ICSBC Winter 2019</title>
  <meta charset="UTF-8">
  <meta name="description" content="ICS: Introduction to CS Bootcamp in Ruby>
  <meta name="keywords" content="Intro to CS, CS, Programming in Ruby, Berkeley, EECS">
  <link href="https://fonts.googleapis.com/css?family=Inconsolata" rel="stylesheet">
  <%= stylesheet_link_tag asset_path("common.css" ) %>
  <%= stylesheet_link_tag asset_path("index.css" ) %>
  <%= stylesheet_link_tag asset_path("font-awesome.min.css" ) %>
  <%= stylesheet_link_tag asset_path("sunburst.css" ) %>
  <%= stylesheet_link_tag asset_path("fullcalendar.min.css" ) %>
  <%= stylesheet_link_tag asset_path("calendar.css" ) %>

  <%= stylesheet_link_tag asset_path("lab.css" , skip_pipeline: true) %>

  <script src="https://code.jquery.com/jquery-3.3.1.js" integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60=" crossorigin="anonymous"></script>
  <%= javascript_include_tag asset_path("script.js" ) %>
  <%= javascript_include_tag asset_path("cheet.min.js" ) %>

</head>

<body>

<div id="navbar" class="navbar-top navitems">
  <a href="/">
    <div class="navitem">Main</div>
  </a>
  <a href="/course_info">
    <div class="navitem">Course Info</div>
  </a>
  <a href="/staffsummary">
    <div class="navitem">Staff</div>
  </a>
  <a href="/scores">
    <div class="navitem">Scores</div>
  </a>
  <a href="resources">
    <div class="navitem">Resources</div>
  </a>
</div>

<div id="content-container" class="content-spacer">
  <main id="content">
    <header class="title">Lab 3: Recursion & OOP</header><ul id="markdown-toc">
    <li><a href="#a-starter-files" id="markdown-toc-a-starter-files">Starter Files
    </a></li>
    <li><a href="#b-lab-instructions" id="markdown-toc-b-lab-instructions">Lab Instructions</a>
    </li>
    <li><a href="#c-stuck" id="markdown-toc-c-stuck">I AM SO STUCK! This stupid program keeps saying I'm wrong >:(</a>
  </ul>


  <h2 id="#a-starter-file">Starter Files</h2>

  <p>Download <%= link_to 'lab3.zip', '/labs/lab3_2.zip'%></p>

  <p><strong>Due Date:</strong> Lab 3 is due by 11:59 pm on Sunday, 1/12</p>
  <br>


  <h2 id="b-lab-instructions">Lab Instructions</h2>

    <div class="section">
      <h3>Download and Extracting Starter File</h3>
      <p>Just like previous labs, download the zip file located at the top of the page, unzip it, 
      and move the folder to your ICS-bootcamp directory.</p>

    <div class="section">
      <h3>Running Instructions</h3>
        <p>Open up your terminal, change directory to where the folder you just downloaded, if you have not.
        Type in the following command to start your lab session:</p>
        <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv">$ </span>ruby lab_runner.rb 3<span class="k"></span>
</code></pre></div>    </div>
        <p>Please follow the instructions in the session. Press <mark><font size=3 color="blue">Enter</font></mark> to enter your response. <br>
        You have unlimited tries, but do think carefully and pay attention to the details! <br> 
        
        <p>[Tip 1] You can exit the lab session by pressing <mark><font size=3 color="blue">ctrl</font></mark> + <mark><font size=3 color="blue">C</font></mark>, 
        and your progress will be saved! Next time, simply run <mark><font size=3 color="blue">ruby lab_runner.rb 3</font></mark> 
        again to resume from where you ended. <br> 
        [Tip 2] To start a Ruby interactive session to test the code out or experiment with it, type <mark><font size=3 color="blue">irb</font></mark> in a terminal window. </p>
        After you finish all the questions, a secret celebrity name will be displayed for submission purposes. Please see the next section. </p>
    </div>

      <div class="section">
        <h3>Submission</h3>
          Create an empty text file with  <strong>lab3.txt</strong> you like, copy the secret name into it, NO need to use quotation marks. <br>
          Submit the file to Gradescope under the assignment <strong>Lab 3</strong>
      </div>
    
  
  <div class="section">
    <h3>Clarifications</h3>
    
    Same story as before, WWRD vs. irb:<p>
    <ul>
      <li> irb uses <mark><font size=3 color="blue">=></font></mark> to separate the output from 
      <mark><font size=3 color="blue">puts</font></mark> from the return value of the line, while you can omit this symbol in your answers to WWRD.
      <li> When there are multiple lines of answers, <b> you should separate the multiple lines with <mark><font size=3 color="blue">;</font></mark> followed by a space. </b>
      <li> We do not ask for the return value of any line that is not the last line of the problem. We do, however, ask for all output from <mark><font size=3 color="blue">puts</font></mark>, no matter what line it is. 
    </ul>
    So WWRD is not irb, it's pretty different. It's actually more similar to what you would get writing a <mark><font size=3 color="blue">.rb</font></mark> 
    file and running it, plus the return value of the last line (and the <mark><font size=3 color="blue">;</font></mark>). <br><br>


    <b>Examples </b><br>
    This is what irb would display: 
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv"></span> >>> 1 + 2
  => 3

  >>> puts "Hi"
  Hi
  => nil

  >>> a = 3
  => 3
  >>> puts a
  3
  => nil
  >>> puts(a + 2 == 4)
  false
  => nil<span class="k"></span></code></pre></div></div>
    <br>
    This is what you should type in WWRD to get the correct answer: <br>
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv"></span> >>> 1 + 2
  3

  >>> puts "Hi"
  Hi; nil

  >>> a = 3
  >>> puts a
  >>> puts(a + 2 == 4)
  3; false; nil<span class="k"></span></code></pre></div></div>
    <br>
    <b><p>Other things to pay attention to:<br></b>
    When a string is returned (not printed/puts), it is returned in <b> double quotation marks </b>.
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv"></span> >>> 'Loki is so handsome!'
  "Loki is so handsome!"

  >>> puts "Loki is so handsome!"
  Loki is so handsome!; nil<span class="k"></span></code></pre></div></div>
    (note the difference between returned and printed strings!)
  </div>

    <br>
    <p><b>A Deeper Dig into "puts":</b> <br>
    Ruby methods always return a value, unless there is an error. This includs <mark><font size=3 color="blue">puts</font></mark>: it not only display/prints a value on the screen but also 
    returns a value, <mark><font size=3 color="blue">nil</font></mark>.
    This is slightly different from that of Python, which you will learn in CS 61A. 
    Let's see a more complex example in Ruby:
  <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nv"></span> >>> var = puts 'OptimusPrime'
  OptimusPrime; nil
  
  >>> var 
  nil
  
  >>> puts var
  nil; nil<span class="k"></span></code></pre></div></div>


  <h2 id="c-stuck">I AM SO STUCK! This stupid program keeps saying I'm wrong >:(</h2>
    <div class="section">
      <h3>Quick tips for getting unstuck, my friend :)</h3>
      <ul> 
        <li> Check for DOUBLE quotes (a string returned is in what?), NIL (<mark><font size=3 color="blue">puts</font></mark> returns what?), and semicolons with spacecs for answers with multiple lines!
        <li> Run the code in irb by typing <mark><font size=3 color="blue">irb</font></mark> in any terminal session!
        (To quit, type <mark><font size=3 color="blue">quit()</font></mark> and hit <mark><font size=3 color="blue">Enter</font></mark>.)
        <li> If things get too complicated, get a paper and write out what variables are and how they get reassigned over time.
        <li> Contact a TA to explain, please! :)
      </ul>
  <br><br><br>

  </main>
</div>
</body>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    tex2jax: {inlineMath: [["$","$"]]}
  });
</script>
<script type="text/javascript"
        src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>
<script>
    $("#markdown-toc").insertBefore("#content");
</script>
</html>