<html>
<head>
  <title>Main | ICSBC Winter 2019</title>
  <meta charset="UTF-8">
  <meta name="description" content="ICS: Introduction to CS Bootcamp in Ruby>
  <meta name="keywords" content="Intro to CS, CS, Programming in Ruby, Berkeley, EECS">
  <link href="https://fonts.googleapis.com/css?family=Inconsolata" rel="stylesheet">
  <%= stylesheet_link_tag asset_path("common.css" ) %>
  <%= stylesheet_link_tag asset_path("index.css" ) %>
  <%= stylesheet_link_tag asset_path("font-awesome.min.css" ) %>
  <%= stylesheet_link_tag asset_path("sunburst.css" ) %>
  <%= stylesheet_link_tag asset_path("fullcalendar.min.css" ) %>
  <%= stylesheet_link_tag asset_path("calendar.css" ) %>

  <%= stylesheet_link_tag asset_path("lab.css" ,skip_pipeline: true) %>

  <script src="https://code.jquery.com/jquery-3.3.1.js" integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60=" crossorigin="anonymous"></script>
  <%= javascript_include_tag asset_path("script.js" ) %>
  <%= javascript_include_tag asset_path("cheet.min.js" ) %>

</head>

<body>

<div id="navbar" class="navbar-top navitems">
  <a href="/">
    <div class="navitem">Main</div>
  </a>
  <a href="/course_info">
    <div class="navitem">Course Info</div>
  </a>
  <a href="/staffsummary">
    <div class="navitem">Staff</div>
  </a>
  <a href="resources">
    <div class="navitem">Resources</div>
  </a>
</div>

<div id="content-container" class="content-spacer">
  <main id="content">
    <header class="title">Homework 2: Flow Control, Arrays, Linked Structures, and Hashes</header><ul id="markdown-toc">
    <li><a href="#prime" id="markdown-toc-prime-hunter">Q1. Prime Hunter</a>
    </li>
    <li><a href="#asteroid" id="markdown-toc-asteroid-tracker">Q2. Asteroid Tracker</a></li>
    <li><a href="#add" id="markdown-toc-add">Q3. Adding Numbers</a></li>
    <li><a href="#word" id="markdown-toc-excel">Q4. Word of the Decade</a></li>
    <li><a href="#cycle" id="markdown-toc">
  </ul>


  <h2 id="f-leap-year">Instructions</h2>

  <p>Download <%= link_to 'hw1.zip', '/hw/hw1.zip'%></p>

  <p><strong>Due Date:</strong> Homework 1 is due by 11:59 pm on Friday, 7/5</p>
  
  <p><strong>Submission:</strong> When you are done, compress the files into a zip file by directly using 
  (<mark><font size=3 color="blue">command/ctrl</font></mark>) + left click to select all 4 files and compress them.
  (Do NOT put all 4 files into a folder first and then compress them.)</p>

  <p><strong>Note:</strong> 
  <ul>
    <li>Do not modify the file names.</li>
    <li>Do not modify the method signature, i.e. the method names and the parameter names.</li>
    <li>Other than the two things above, feel free to write the method in any way 
    you want (except question 1) and write any additional helper methods you want to use. </li>
  </ul>

    <h2 id="diff">Q1. Difference Between Numbers</h2>

    <p>Complete the following Ruby method for finding the difference between 
    two given numbers <mark><font size=3 color="blue">x</font></mark> and 
    <mark><font size=3 color="blue">y</font></mark>. Note that the difference 
    between two numbers are always non-negative (>=0).</p>

    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight">
    <code><span class="nv"></span>def diff(x, y)
      if _______________
        return ______________
      else
        return ______________
      end
    end
    <span class="nt"></span></code></pre></div>    
    </div>

    <h2 id="leap">Q2. Is Leap Year </h2>

    <p>Complete the following Ruby Method for determining if a given year is a leap year. 
    Every year that is exactly divisible by four is a leap year, except for years that are 
    exactly divisible by 100, but these centurial years are leap years if they are exactly divisible by 400.
    </p>

    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight">
    <code><span class="nv"></span><span class="nv"></span>def is_leap(year)
      # Complete the Method
      # returns the string “yes” if it is leap year; “no” otherwise
    end
    <span class="nt"></span></code></pre></div>    </div>


    <h2 id="snack">Q3. Is Better Snack</h2>

    <p>Complete the following Ruby Method that given a few attributes of two snacks A and B, 
    determines if A is a “healthier” snack than B (assuming you don’t have to break ties in the end):
    <br>
    To compare a snack A with another snack B, we compare their attributes in the following specific order:
    <ul>
      <li> sweetness (an integer from 1 to 10 inclusive)
        <ul><li> If a snack is less sweet, then it is considered healthier</li></ul>
      </li>
      <li> calories (an integer from 30 to 300 inclusive)
        <ul><li> If a snack has less calories, then it is considered healthier</li></ul>
      </li>
      <li> proteins (an integer from 0 to 20 inclusive)
        <ul><li> If a snack has more proteins, then it is considered healthier</li></ul>
      </li>
      <li> popularity (a string that can, in decreasing order of popularity, take on one of the following values: “viral” > “popular” > “trending” > “moderate” > “novice”)
        <ul><li> If a snack is more popular, then it is considered healthier</li></ul>
      </li>
    </ul>

    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv"></span>
    <span class="nv"></span>def is_better_snack(A_sweetness, A_calories, A_proteins, A_popularity, B_sweetness, B_calories, B_proteins, B_popularity)
      # Complete the Method
      # returns True if snack A is better than B.
      # returns False otherwise.
    end
    <span class="nt"></span></code></pre></div>    </div>

    
    <h2 id="excel">Q4. Are You Good at Excel?</h2>

    <p> Complete the following Ruby Method that given an integer <mark><font size=3 color="blue">n</font></mark> 
    (with max 3 digits) representing the column number, convert this integer to its corresponding Excel 
    representation (note that the representation will only consist of upper case English letter(s).

    For example:
    <ul>
      <li> Column 1 would be mapped to the string “A”. </li>
      <li> Column 2 would be mapped to the string “B”. </li>
      <li> Column 26 would be mapped to the string “Z”. </li>
      <li> Column 27 would be mapped to the string “AB”. </li>
      <li> Column 28 would be mapped to the string “AC”. </li>
    </ul>
    </p>

    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv"></span> 
    def convert_to_excel(n):
      # Complete the Method
      # Hint 1: Consider splitting your method into 3 separate cases based on the 
      # possible number of letters the converted Excel representation can have using 
      # the if - elsif - else statements. 
      # Hint 2: You are welcome (but not required) to fill in the helper method 
      # below or add additional helper methods and use it in this method. 
      # The method we have provided below converts a 1-digit column number to the 
      # corresponding Excel representation.
    end

    def convert_single_digit(n):
      # Complete the Method
      # Note that n is guaranteed to have only 1 digit!
    end
    <span class="nt"></span>
</code></pre></div>    </div>

  </main>
</div>
</body>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    tex2jax: {inlineMath: [["$","$"]]}
  });
</script>
<script type="text/javascript"
        src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>
<script>
    $("#markdown-toc").insertBefore("#content");
</script>
</html>